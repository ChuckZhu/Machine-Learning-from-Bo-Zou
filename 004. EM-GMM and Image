#With problem of GMM

def composite(band, parameter):
    c1 = parameter[0]
    mu1 = parameter[2]
    sigma1 = parameter[3]
    c2 = parameter[1]
    mu2 = parameter[4]
    sigma2 = parameter[5]
    
    p1 = []
    p2 = []
    for pixel in band:
        p1.append(c1 * gauss(pixel, mu1, sigma1))
        p2.append(c2 * gauss(pixel, mu2, sigma2))
        
    # gray equilibrium
    scale(p1)
    scale(p2)
    return [p1, p2]

from PIL import Image
from sklearn import mixture

if __name__ == "__main__":
    im = Image.open('C:\\Users\\Chuck\\Desktop\\1.png')
    print im.format, im.size, im.mode
    
    # Ditributed processing
    im = im.split()[0]
    nb = []
    data = list(im.getdata())
    parameter = GMM(data)
    t = composite(data, parameter)
    
    im1 = Image.new('L', im.size)
    im1.putdata(t[0])
